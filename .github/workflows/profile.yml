name: Profile

on:
  workflow_dispatch:

jobs:
  profile:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
    
    - name: Install profiling tools
      run: |
        cargo install cargo-expand
        cargo install flamegraph
        sudo apt-get update
        sudo apt-get install -y linux-tools-generic linux-tools-common
    
    - name: Set perf permissions
      run: |
        echo -1 | sudo tee /proc/sys/kernel/perf_event_paranoid
        echo 0 | sudo tee /proc/sys/kernel/kptr_restrict
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Generate expanded macro output
      run: |
        cd .NETBenchmark/RustBenchmark
        mkdir -p profiling_output
        cargo expand --example memorypack_profile > profiling_output/memorypack_profile_expanded.rs 2>&1 || true
    
    - name: Run dhat heap profiling
      run: |
        cd .NETBenchmark/RustBenchmark
        cargo run --example memorypack_profile --release --features dhat-heap
        if [ -f dhat-heap.json ]; then
          mv dhat-heap.json profiling_output/
          echo "dhat heap profile generated"
        fi
    
    - name: Generate flamegraph
      run: |
        cd .NETBenchmark/RustBenchmark
        sudo env "PATH=$PATH" CARGO_PROFILE_RELEASE_DEBUG=true cargo flamegraph --example memorypack_profile -o profiling_output/flamegraph.svg
      continue-on-error: true
    
    - name: Upload profiling results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: profiling-results
        path: |
          .NETBenchmark/RustBenchmark/profiling_output/
